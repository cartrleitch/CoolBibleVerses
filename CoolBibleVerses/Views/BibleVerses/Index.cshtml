@model IEnumerable<CoolBibleVerses.Models.BibleVerse>

@{
    ViewData["Title"] = "Index";
}

<h1>All Verses</h1>
<form asp-action="ShowSearchResults" style="display:inline; padding-top: 20px">
    <label for="SearchTerm" style="display:inline; padding-right:10px">Search for verse:</label>
    <input name="SearchTerm" class="form-control" style="display:inline; width:70%" />
    <input type="submit" value="Search" class="button-primary" style="display:inline;" />
</form>
<p style="padding-top:20px">
    <a asp-action="Create" class="button-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Book
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Verse)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                Tags
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(model => item.BibleBook.bookName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Chapter)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Verse)
            </td>
            <td>
                <div class="verse-table-cell cut-text">
                    @Html.DisplayFor(modelItem => item.Details)
                </div>
            </td>
            <td>
                <div class="verse-table-cell cut-text">
                    @Html.DisplayFor(modelItem => item.Text)
                </div>
            </td>                
            <td>
                @{
                    string tags = "";
                    if (item.VerseTags != null)
                    {
                    tags = string.Join(", ", item.VerseTags.Select(t => t.Tag.tagText));
                    }
                }
                <span>@tags</span>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
